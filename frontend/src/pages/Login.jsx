import { useState } from "react";
import { loginUser  } from "../services/api";
import logo from "../assets/LogotipoProyecto.png";

function Login() {
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");
  const [message, setMessage] = useState(null);
  const [loading, setLoading] = useState(false);

  const handleLogin = async (e) => {
    e.preventDefault();
    setMessage(null);
    setLoading(true);

    try {
      const res = await loginUser ({ username, password });
      setMessage({ text: "‚úÖ Inicio de sesi√≥n exitoso", type: "success" });
      console.log("Token:", res.data);
      
    } catch (err) {
      const errorDetail = err.response?.data?.detail || err.response?.data?.error || "";
      let errorText = "‚ùå Error al iniciar sesi√≥n";
      
      
      if (errorDetail.includes("No active account") || errorDetail.includes("credentials") || errorDetail.includes("invalid")) {
        errorText = "‚ùå Usuario o contrase√±a incorrectos. Int√©ntalo de nuevo";
      } else if (errorDetail.includes("network") || !err.response) {
        errorText = "‚ùå Error de conexi√≥n. Verifica tu internet e int√©ntalo de nuevo";
      } else if (errorDetail.includes("inactive")) {
        errorText = "‚ùå Cuenta inactiva. Contacta al administrador";
      } else {
        errorText = `‚ùå ${errorDetail || "Ocurri√≥ un error inesperado"}`;  // Solo si es necesario
      }
      
      setMessage({ text: errorText, type: "error" });
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="flex flex-row min-h-screen overflow-hidden">
      {/* ===== LADO IZQUIERDO - LOGO ===== */}
      {/* SIEMPRE horizontal, ocupa ~49% del ancho */}
      <div 
        className="w-[49%] min-h-screen flex items-center justify-center"
        style={{ backgroundColor: '#FFF9E6' }} // üé® CAMBIAR COLOR DE FONDO AQU√ç (mismo del logo)
      >
        <img 
          src={logo} 
          alt="FastFood.exe Logo" 
          className="h-auto"
          style={{
            width: '60%',           // üìè TAMA√ëO DEL LOGO (ajusta entre 40% - 80%)
            maxWidth: '500px',      // üìè TAMA√ëO M√ÅXIMO (ajusta seg√∫n necesites)
            objectFit: 'contain'
          }}
        />
      </div>

      {/* ===== LADO DERECHO - FORMULARIO ===== */}
      {/* SIEMPRE horizontal, ocupa ~51% del ancho */}
      <div 
        className="w-[51%] min-h-screen flex items-center justify-center overflow-y-auto"
        style={{ backgroundColor: '#FFFFFF' }} // üé® CAMBIAR COLOR DE FONDO AQU√ç
      >
        <div className="w-full px-8 py-12" style={{ maxWidth: '480px' }}> {/* üìê Cambiar maxWidth para ancho del form */}
          
          {/* ===== T√çTULO ===== */}
          <h2 
            className="text-center font-bold mb-12"
            style={{ 
              fontSize: '48px',        // üìù TAMA√ëO DE FUENTE DEL T√çTULO
              fontFamily: 'Arial, sans-serif', // üî§ TIPO DE LETRA
              color: '#000000',        // üé® COLOR DEL T√çTULO
              letterSpacing: '2px'     // üìè ESPACIADO ENTRE LETRAS
            }}
          >
            INICIAR SESI√ìN
          </h2>

          <form onSubmit={handleLogin} className="space-y-6">
            
            {/* ===== INPUT USUARIO ===== */}
            <input
              type="text"
              placeholder="Usuario"
              value={username}
              onChange={(e) => setUsername(e.target.value)}
              required
              className="w-full rounded-lg focus:outline-none focus:ring-2 focus:ring-yellow-400 transition-all duration-200"
              style={{
                padding: '16px',           // üìè PADDING INTERNO DEL INPUT
                fontSize: '18px',          // üìù TAMA√ëO DE FUENTE
                fontFamily: 'Arial, sans-serif', // üî§ TIPO DE LETRA
                border: '2px solid #D1D5DB', // üé® BORDE (color y grosor)
                backgroundColor: '#FFFFFF'  // üé® FONDO DEL INPUT
              }}
            />

            {/* ===== INPUT CONTRASE√ëA ===== */}
            <input
              type="password"
              placeholder="Contrase√±a"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              required
              className="w-full rounded-lg focus:outline-none focus:ring-2 focus:ring-yellow-400 transition-all duration-200"
              style={{
                padding: '16px',           // üìè PADDING INTERNO DEL INPUT
                fontSize: '18px',          // üìù TAMA√ëO DE FUENTE
                fontFamily: 'Arial, sans-serif', // üî§ TIPO DE LETRA
                border: '2px solid #D1D5DB', // üé® BORDE
                backgroundColor: '#FFFFFF'  // üé® FONDO DEL INPUT
              }}
            />

            {/* ===== BOT√ìN CONTINUAR ===== */}
            <button
              type="submit"
              disabled={loading}
              className="w-full rounded-lg font-semibold transition-all duration-200 hover:opacity-90"
              style={{
                padding: '16px',                    // üìè PADDING (altura del bot√≥n)
                fontSize: '20px',                   // üìù TAMA√ëO DE FUENTE
                fontFamily: 'Arial, sans-serif',    // üî§ TIPO DE LETRA
                backgroundColor: loading ? '#D1D5DB' : '#FDE68A', // üé® COLOR DE FONDO (amarillo)
                color: '#000000',                   // üé® COLOR DEL TEXTO
                border: '2px solid #000000',        // üé® BORDE NEGRO
                cursor: loading ? 'not-allowed' : 'pointer'
              }}
            >
              {loading ? "Cargando..." : "Continuar"}
            </button>

            {/* ===== LINK OLVID√ì CONTRASE√ëA ===== */}
            <div className="text-center pt-2">
              <a 
                href="#" 
                className="hover:underline transition-colors"
                style={{
                  fontSize: '14px',              // üìù TAMA√ëO DE FUENTE
                  fontFamily: 'Arial, sans-serif', // üî§ TIPO DE LETRA
                  color: '#6B7280'               // üé® COLOR DEL TEXTO (gris)
                }}
              >
                ¬øHas olvidado la contrase√±a?
              </a>
            </div>

            {/* ===== MENSAJE DE ERROR/√âXITO ===== */}
            {message && (
              <p
                className="text-center px-4 py-3 rounded-lg w-full font-medium"
                style={{
                  fontSize: '14px',  // üìù TAMA√ëO DE FUENTE
                  backgroundColor: message.type === "error" ? '#FEE2E2' : '#D1FAE5', // üé® FONDO
                  color: message.type === "error" ? '#991B1B' : '#065F46', // üé® COLOR TEXTO
                  border: `2px solid ${message.type === "error" ? '#FCA5A5' : '#6EE7B7'}` // üé® BORDE
                }}
              >
                {message.text}
              </p>
            )}
          </form>
        </div>
      </div>
    </div>
  );
}

export default Login;
